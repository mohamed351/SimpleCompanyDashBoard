{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app-routing.module.ts","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/department/department.component.ts","./ClientApp/app/department/department.component.html","./ClientApp/app/employees/emp-forms/emp-forms.component.ts","./ClientApp/app/employees/emp-forms/emp-forms.component.html","./ClientApp/app/employees/employee-list/employee-list.component.ts","./ClientApp/app/employees/employee-list/employee-list.component.html","./ClientApp/app/employees/employees.component.ts","./ClientApp/app/employees/employees.component.html","./ClientApp/app/login/login.component.ts","./ClientApp/app/login/login.component.html","./ClientApp/app/nav/authication/authication.component.ts","./ClientApp/app/nav/nav.component.ts","./ClientApp/app/nav/nav.component.html","./ClientApp/app/registration/registration.component.ts","./ClientApp/app/registration/registration.component.html","./ClientApp/environments/environment.ts","./ClientApp/main.ts","./ClientApp/services/employee.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ApplicationAsp';\n}\n","<app-nav></app-nav>\n\n<div class=\"container\">\n<app-employees></app-employees>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Router, Routes } from \"@angular/router\";\nimport {FormsModule} from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\n\n\nimport { AppComponent } from './app.component';\nimport { EmployeesComponent } from './employees/employees.component';\nimport { DepartmentComponent } from './department/department.component';\nimport { NavComponent } from './nav/nav.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { AuthicationComponent } from './nav/authication/authication.component';\nimport { EmpFormsComponent } from './employees/emp-forms/emp-forms.component';\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component';\nimport { EmployeeService } from '../services/employee.service';\n\nlet router:Routes=[{path:\"\" ,component:EmployeesComponent},\n{path:\"Department\",component:DepartmentComponent}]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeesComponent,\n    DepartmentComponent,\n    NavComponent,\n    LoginComponent,\n    RegistrationComponent,\n    AuthicationComponent,\n    EmpFormsComponent,\n    EmployeeListComponent,\n  \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n     HttpClientModule,\n     FormsModule,\n     RouterModule.forRoot(router)\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-department',\n  templateUrl: './department.component.html',\n  styleUrls: ['./department.component.css']\n})\nexport class DepartmentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>department works!</p>\n","import { EmployeeService } from './../../../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms'\n@Component({\n  selector: 'app-emp-forms',\n  templateUrl: './emp-forms.component.html',\n  styleUrls: ['./emp-forms.component.css']\n})\nexport class EmpFormsComponent implements OnInit {\n\n  constructor(public service:EmployeeService) {\n\n   }\n\n  ngOnInit(): void {\n    this.resetForm();\n     \n\n  }\n   resetForm(data?:NgForm){\n    if(data != null)\n    {\n      data.resetForm();\n    }\n  \n    this.service.Employee= {\n      departmentID:null,\n      departmentName:'',\n      id:null,\n      name:'',\n      salary:null\n\n    }\n  \n   }\n  \n  SubmitForm(data:NgForm){\n    if(data.valid){\n    this.service.PostEmployees(data.value).subscribe(a=>{\n      alert(\"The employee is added\");\n      this.resetForm(data);\n      this.service.GetEmployees();\n     \n\n      \n    });\n    }\n\n  }\n\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"SubmitForm(form)\">\n  <div class=\"form-group\">\n  \n        <label class=\"label-control\">Name</label>\n        <input required type=\"text\" name=\"name\"  class=\"form-control\" placeholder=\"Name\"  #Name=\"ngModel\" [ngModel]=\"service.Employee.name\"> \n        <div class=\"error-message\" *ngIf=\"Name.invalid && Name.touched\">\n            The Name is Required\n        </div>\n  </div>\n\n  <div class=\"form-group\">\n  \n    <label class=\"label-control\">Salary</label>\n    <input required type=\"number\" name=\"Salary\"  class=\"form-control\" placeholder=\"Salary\"  #Salary=\"ngModel\" [ngModel]=\"service.Employee.salary\"> \n    <div class=\"error-message\" *ngIf=\"Salary.invalid && Salary.touched\">\n        The Salary is Required\n    </div>\n</div>\n\n\n<div class=\"form-group\">\n    <label class=\"label-control\">DepartmentID</label>\n    <input  required type=\"number\" name=\"departmentID\"  class=\"form-control\" placeholder=\"departmentID\"  #DepartmentID=\"ngModel\" [ngModel]=\"service.Employee.departmentID\"> \n    <div class=\"error-message\" *ngIf=\"DepartmentID.invalid && DepartmentID.touched\">\n        The Department is invalid\n    </div>\n</div>\n    \n   <button [disabled]=\"form.invalid\" class=\"btn btn-success\">Submit</button>\n</form>","import { EmployeeService } from './../../../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  constructor(public emp:EmployeeService) { }\n\n  ngOnInit(): void {\n    this.emp.GetEmployees();\n  }\n\n}\n","<table class=\"table table-hover mt-4 \">\n\n    <tbody>\n    <tr *ngFor=\"let item of this.emp.EmployeesList\">\n        <td>{{item.name}}</td>\n        <td>{{ item.salary}}</td>\n        <td>{{item.departmentName}}</td>\n        <td> <button class=\"btn btn-danger\">X</button> </td>\n    </tr>\n</tbody>\n\n</table>","import { Employee } from './../../models/Employee';\nimport { EmployeeService } from '../../services/employee.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n\n\n  constructor(private EmployeeService:EmployeeService){\n\n  }   \n\n  ngOnInit(): void {\n    \n  }\n  EditEmployee(id:number){\n    console.log(id);\n  }\n  DeleteEmployee(id:number){\n    console.log(id);\n  }\n\n}\n","<!-- <div class=\"mt-5 container\">\n<table class=\"table table-boraderd \">\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Salary</th>\n            <th>Department</th>\n          \n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let item of Employee\">\n            <td>{{item.name}}</td>\n       \n            <td>{{item.salary}}</td>\n            <td>{{item.departmentName}}</td>\n            <td>\n                <button class=\"btn btn-success\" (click)=\"EditEmployee(item.id)\">Edit </button>|\n                <button class=\"btn btn-danger\" (click)=\"DeleteEmployee(item.id)\">Delete </button>\n            </td>\n        </tr>\n\n    </tbody>\n\n</table>\n</div>\n\n -->\n<div class=\"row mt-3\">\n\n    <div class=\"col-md-5\">\n        <app-emp-forms></app-emp-forms>\n    </div>\n\n    <div class=\"col-md-6\">\n        <app-employee-list></app-employee-list>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n<form #form=\"ngForm\">\n    <div class=\"form-group\">\n      <label>Email address</label>\n      <input  type=\"email\" class=\"form-control\">\n      <small id=\"emailHelp\" class=\"form-text text-muted\"> </small>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\n    </div>\n\n    <div class=\"form-group form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\n      <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authication',\n  templateUrl: './authication.component.html',\n  styleUrls: ['./authication.component.css']\n})\nexport class AuthicationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">Company </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n      <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link active\" href=\"#\">Employees <span class=\"sr-only\">(current)</span></a>\n        <a class=\"nav-item nav-link\" href=\"#\">Department</a>\n     \n      </div>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>registration works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Employee } from './../models/Employee';\nimport { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  Employee:Employee;\n  EmployeesList:Employee[];\n    constructor(private httpClient:HttpClient) { }\n\n    GetEmployees() {\n\n        return this.httpClient.get<Employee[]>(\"/api/Employees\")\n        .toPromise()\n        .then(a=> this.EmployeesList = a as Employee[]);\n    }\n\n    PostEmployees(emp:Employee){\n      return this.httpClient.post(\"/api/Employees\",emp);\n    }\n}\n"],"sourceRoot":"webpack:///"}